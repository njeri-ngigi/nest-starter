name: Run sauti-pol Nestjs Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Install Docker Compose
    - name: Install Docker Compose
      run: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

        sudo add-apt-repository \
          "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) \
          stable"

        sudo apt-get install docker-compose

        # Check the version:
        docker-compose --version

      # # Add Docker's official GPG key:
      # sudo apt-get update
      # sudo apt-get install ca-certificates curl
      # sudo install -m 0755 -d /etc/apt/keyrings
      # sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
      # sudo chmod a+r /etc/apt/keyrings/docker.asc

      # # Add the repository to Apt sources:
      # echo \
      #   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      #   $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      #   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      # sudo apt-get update

      # # Install the latest version:
      # sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      
      # # Check the version:
      # docker-compose --version

    # Step 4: Build the Docker images and run the tests
    - name: Run tests with Docker Compose
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME_TEST: ${{ secrets.DB_NAME_TEST }}
      run: |
        docker-compose up -d db-test  # Start the test database container
        docker-compose run test        # Run the test service
        docker-compose down            # Clean up after tests
